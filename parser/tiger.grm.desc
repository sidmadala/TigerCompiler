2 shift/reduce conflicts

error:  state 33: shift/reduce conflict (shift TYPE, reduce by rule 45)
error:  state 38: shift/reduce conflict (shift FUNCTION, reduce by rule 44)

state 0:

	program : . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	program	goto 144
	exp	goto 6
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funexp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 1:

	exp : arrayRecordBuilder .  (reduce by rule 16)



	.	reduce by rule 16


state 2:

	exp : funexp .  (reduce by rule 17)



	.	reduce by rule 17


state 3:

	lvalue : lvalue_not_id .  (reduce by rule 40)
	lvalue_not_id : lvalue_not_id . LBRACK exp RBRACK 

	LBRACK	shift 18


	.	reduce by rule 40


state 4:

	exp : lvalue .  (reduce by rule 14)
	exp : lvalue . ASSIGN exp 
	lvalue_not_id : lvalue . DOT ID 

	DOT	shift 20
	ASSIGN	shift 19


	.	reduce by rule 14


state 5:

	exp : opexp .  (reduce by rule 5)



	.	reduce by rule 5


state 6:

	program : exp .  (reduce by rule 0)
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21


	.	reduce by rule 0


state 7:

	exp : NIL .  (reduce by rule 1)



	.	reduce by rule 1


state 8:

	exp : BREAK .  (reduce by rule 8)



	.	reduce by rule 8


state 9:

	exp : LET . declist IN exp_seq END 
	exp : LET . declist IN END 

	FUNCTION	shift 42
	VAR	shift 41
	TYPE	shift 40

	fundec	goto 39
	funlist	goto 38
	dec	goto 37
	declist	goto 36
	vardec	goto 35
	tydec	goto 34
	tylist	goto 33

	.	error


state 10:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 43


	.	error


state 11:

	exp : WHILE . exp DO exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 44
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funexp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 12:

	exp : IF . exp THEN exp ELSE exp 
	exp : IF . exp THEN exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 45
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funexp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 13:

	opexp : MINUS . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 46
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funexp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 14:

	exp : LPAREN . exp RPAREN 
	exp : LPAREN . RPAREN 
	exp : LPAREN . exp SEMICOLON exp_seq RPAREN 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	RPAREN	shift 48
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 47
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funexp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 15:

	exp : STRING .  (reduce by rule 2)



	.	reduce by rule 2


state 16:

	opexp : INT .  (reduce by rule 31)



	.	reduce by rule 31


state 17:

	lvalue : ID .  (reduce by rule 39)
	lvalue_not_id : ID . LBRACK exp RBRACK 
	funexp : ID . LPAREN RPAREN 
	funexp : ID . LPAREN fun_param RPAREN 
	arrayRecordBuilder : ID . LBRACK exp RBRACK OF exp 
	arrayRecordBuilder : ID . LBRACE record_param RBRACE 
	arrayRecordBuilder : ID . LBRACE RBRACE 

	LPAREN	shift 51
	LBRACK	shift 50
	LBRACE	shift 49


	.	reduce by rule 39


state 18:

	lvalue_not_id : lvalue_not_id LBRACK . exp RBRACK 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 52
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funexp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 19:

	exp : lvalue ASSIGN . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 53
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funexp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 20:

	lvalue_not_id : lvalue DOT . ID 

	ID	shift 54


	.	error


state 21:

	opexp : exp OR . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 55
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funexp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 22:

	opexp : exp AND . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 56
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funexp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 23:

	opexp : exp GE . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 57
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funexp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 24:

	opexp : exp GT . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 58
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funexp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 25:

	opexp : exp LE . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 59
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funexp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 26:

	opexp : exp LT . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 60
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funexp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 27:

	opexp : exp NEQ . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 61
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funexp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 28:

	opexp : exp EQ . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 62
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funexp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 29:

	opexp : exp DIVIDE . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 63
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funexp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 30:

	opexp : exp TIMES . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 64
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funexp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 31:

	opexp : exp MINUS . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 65
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funexp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 32:

	opexp : exp PLUS . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 66
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funexp	goto 2
	arrayRecordBuilder	goto 1

	.	error

error:  state 33: shift/reduce conflict (shift TYPE, reduce by rule 45)

state 33:

	dec : tylist .  (reduce by rule 45)
	tylist : tylist . tydec 

	TYPE	shift 40

	tydec	goto 67

	.	reduce by rule 45


state 34:

	tylist : tydec .  (reduce by rule 53)



	.	reduce by rule 53


state 35:

	dec : vardec .  (reduce by rule 46)



	.	reduce by rule 46


state 36:

	exp : LET declist . IN exp_seq END 
	exp : LET declist . IN END 
	declist : declist . dec 

	IN	shift 69
	FUNCTION	shift 42
	VAR	shift 41
	TYPE	shift 40

	fundec	goto 39
	funlist	goto 38
	dec	goto 68
	vardec	goto 35
	tydec	goto 34
	tylist	goto 33

	.	error


state 37:

	declist : dec .  (reduce by rule 47)



	.	reduce by rule 47

error:  state 38: shift/reduce conflict (shift FUNCTION, reduce by rule 44)

state 38:

	funlist : funlist . fundec 
	dec : funlist .  (reduce by rule 44)

	FUNCTION	shift 42

	fundec	goto 70

	.	reduce by rule 44


state 39:

	funlist : fundec .  (reduce by rule 64)



	.	reduce by rule 64


state 40:

	tydec : TYPE . ID EQ ty 

	ID	shift 71


	.	error


state 41:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 72


	.	error


state 42:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 

	ID	shift 73


	.	error


state 43:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 74


	.	error


state 44:

	exp : WHILE exp . DO exp 
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21
	DO	shift 75


	.	error


state 45:

	exp : IF exp . THEN exp ELSE exp 
	exp : IF exp . THEN exp 
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21
	THEN	shift 76


	.	error


state 46:

	opexp : MINUS exp .  (reduce by rule 18)
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 



	.	reduce by rule 18


state 47:

	exp : LPAREN exp . RPAREN 
	exp : LPAREN exp . SEMICOLON exp_seq RPAREN 
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	SEMICOLON	shift 78
	RPAREN	shift 77
	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21


	.	error


state 48:

	exp : LPAREN RPAREN .  (reduce by rule 12)



	.	reduce by rule 12


state 49:

	arrayRecordBuilder : ID LBRACE . record_param RBRACE 
	arrayRecordBuilder : ID LBRACE . RBRACE 

	ID	shift 81
	RBRACE	shift 80

	record_param	goto 79

	.	error


state 50:

	lvalue_not_id : ID LBRACK . exp RBRACK 
	arrayRecordBuilder : ID LBRACK . exp RBRACK OF exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 82
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funexp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 51:

	funexp : ID LPAREN . RPAREN 
	funexp : ID LPAREN . fun_param RPAREN 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	RPAREN	shift 85
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 84
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funexp	goto 2
	fun_param	goto 83
	arrayRecordBuilder	goto 1

	.	error


state 52:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 
	lvalue_not_id : lvalue_not_id LBRACK exp . RBRACK 

	RBRACK	shift 86
	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21


	.	error


state 53:

	exp : lvalue ASSIGN exp .  (reduce by rule 15)
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21


	.	reduce by rule 15


state 54:

	lvalue_not_id : lvalue DOT ID .  (reduce by rule 41)



	.	reduce by rule 41


state 55:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 
	opexp : exp OR exp .  (reduce by rule 30)

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22


	.	reduce by rule 30


state 56:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp AND exp .  (reduce by rule 29)
	opexp : exp . OR exp 

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23


	.	reduce by rule 29


state 57:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp GE exp .  (reduce by rule 28)
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	EOF	reduce by rule 28
	COMMA	reduce by rule 28
	SEMICOLON	reduce by rule 28
	RPAREN	reduce by rule 28
	RBRACK	reduce by rule 28
	RBRACE	reduce by rule 28
	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	AND	reduce by rule 28
	OR	reduce by rule 28
	THEN	reduce by rule 28
	ELSE	reduce by rule 28
	TO	reduce by rule 28
	DO	reduce by rule 28
	IN	reduce by rule 28
	END	reduce by rule 28
	FUNCTION	reduce by rule 28
	VAR	reduce by rule 28
	TYPE	reduce by rule 28


	.	error


state 58:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp GT exp .  (reduce by rule 27)
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	EOF	reduce by rule 27
	COMMA	reduce by rule 27
	SEMICOLON	reduce by rule 27
	RPAREN	reduce by rule 27
	RBRACK	reduce by rule 27
	RBRACE	reduce by rule 27
	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	AND	reduce by rule 27
	OR	reduce by rule 27
	THEN	reduce by rule 27
	ELSE	reduce by rule 27
	TO	reduce by rule 27
	DO	reduce by rule 27
	IN	reduce by rule 27
	END	reduce by rule 27
	FUNCTION	reduce by rule 27
	VAR	reduce by rule 27
	TYPE	reduce by rule 27


	.	error


state 59:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp LE exp .  (reduce by rule 26)
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	EOF	reduce by rule 26
	COMMA	reduce by rule 26
	SEMICOLON	reduce by rule 26
	RPAREN	reduce by rule 26
	RBRACK	reduce by rule 26
	RBRACE	reduce by rule 26
	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	AND	reduce by rule 26
	OR	reduce by rule 26
	THEN	reduce by rule 26
	ELSE	reduce by rule 26
	TO	reduce by rule 26
	DO	reduce by rule 26
	IN	reduce by rule 26
	END	reduce by rule 26
	FUNCTION	reduce by rule 26
	VAR	reduce by rule 26
	TYPE	reduce by rule 26


	.	error


state 60:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp LT exp .  (reduce by rule 25)
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	EOF	reduce by rule 25
	COMMA	reduce by rule 25
	SEMICOLON	reduce by rule 25
	RPAREN	reduce by rule 25
	RBRACK	reduce by rule 25
	RBRACE	reduce by rule 25
	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	AND	reduce by rule 25
	OR	reduce by rule 25
	THEN	reduce by rule 25
	ELSE	reduce by rule 25
	TO	reduce by rule 25
	DO	reduce by rule 25
	IN	reduce by rule 25
	END	reduce by rule 25
	FUNCTION	reduce by rule 25
	VAR	reduce by rule 25
	TYPE	reduce by rule 25


	.	error


state 61:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp NEQ exp .  (reduce by rule 24)
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	EOF	reduce by rule 24
	COMMA	reduce by rule 24
	SEMICOLON	reduce by rule 24
	RPAREN	reduce by rule 24
	RBRACK	reduce by rule 24
	RBRACE	reduce by rule 24
	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	AND	reduce by rule 24
	OR	reduce by rule 24
	THEN	reduce by rule 24
	ELSE	reduce by rule 24
	TO	reduce by rule 24
	DO	reduce by rule 24
	IN	reduce by rule 24
	END	reduce by rule 24
	FUNCTION	reduce by rule 24
	VAR	reduce by rule 24
	TYPE	reduce by rule 24


	.	error


state 62:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp EQ exp .  (reduce by rule 23)
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	EOF	reduce by rule 23
	COMMA	reduce by rule 23
	SEMICOLON	reduce by rule 23
	RPAREN	reduce by rule 23
	RBRACK	reduce by rule 23
	RBRACE	reduce by rule 23
	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	AND	reduce by rule 23
	OR	reduce by rule 23
	THEN	reduce by rule 23
	ELSE	reduce by rule 23
	TO	reduce by rule 23
	DO	reduce by rule 23
	IN	reduce by rule 23
	END	reduce by rule 23
	FUNCTION	reduce by rule 23
	VAR	reduce by rule 23
	TYPE	reduce by rule 23


	.	error


state 63:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp DIVIDE exp .  (reduce by rule 22)
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 



	.	reduce by rule 22


state 64:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp TIMES exp .  (reduce by rule 21)
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 



	.	reduce by rule 21


state 65:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp MINUS exp .  (reduce by rule 20)
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	TIMES	shift 30
	DIVIDE	shift 29


	.	reduce by rule 20


state 66:

	opexp : exp . PLUS exp 
	opexp : exp PLUS exp .  (reduce by rule 19)
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	TIMES	shift 30
	DIVIDE	shift 29


	.	reduce by rule 19


state 67:

	tylist : tylist tydec .  (reduce by rule 54)



	.	reduce by rule 54


state 68:

	declist : declist dec .  (reduce by rule 48)



	.	reduce by rule 48


state 69:

	exp : LET declist IN . exp_seq END 
	exp : LET declist IN . END 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	END	shift 89
	BREAK	shift 8
	NIL	shift 7

	exp	goto 88
	exp_seq	goto 87
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funexp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 70:

	funlist : funlist fundec .  (reduce by rule 65)



	.	reduce by rule 65


state 71:

	tydec : TYPE ID . EQ ty 

	EQ	shift 90


	.	error


state 72:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 92
	ASSIGN	shift 91


	.	error


state 73:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 

	LPAREN	shift 93


	.	error


state 74:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 94
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funexp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 75:

	exp : WHILE exp DO . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 95
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funexp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 76:

	exp : IF exp THEN . exp ELSE exp 
	exp : IF exp THEN . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 96
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funexp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 77:

	exp : LPAREN exp RPAREN .  (reduce by rule 11)



	.	reduce by rule 11


state 78:

	exp : LPAREN exp SEMICOLON . exp_seq RPAREN 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 88
	exp_seq	goto 97
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funexp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 79:

	arrayRecordBuilder : ID LBRACE record_param . RBRACE 

	RBRACE	shift 98


	.	error


state 80:

	arrayRecordBuilder : ID LBRACE RBRACE .  (reduce by rule 34)



	.	reduce by rule 34


state 81:

	record_param : ID . EQ exp 
	record_param : ID . EQ exp COMMA record_param 

	EQ	shift 99


	.	error


state 82:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 
	lvalue_not_id : ID LBRACK exp . RBRACK 
	arrayRecordBuilder : ID LBRACK exp . RBRACK OF exp 

	RBRACK	shift 100
	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21


	.	error


state 83:

	funexp : ID LPAREN fun_param . RPAREN 

	RPAREN	shift 101


	.	error


state 84:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 
	fun_param : exp .  (reduce by rule 66)
	fun_param : exp . COMMA fun_param 

	COMMA	shift 102
	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21


	.	reduce by rule 66


state 85:

	funexp : ID LPAREN RPAREN .  (reduce by rule 60)



	.	reduce by rule 60


state 86:

	lvalue_not_id : lvalue_not_id LBRACK exp RBRACK .  (reduce by rule 42)



	.	reduce by rule 42


state 87:

	exp : LET declist IN exp_seq . END 
	exp_seq : exp_seq . SEMICOLON exp 

	SEMICOLON	shift 104
	END	shift 103


	.	error


state 88:

	exp_seq : exp .  (reduce by rule 37)
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21


	.	reduce by rule 37


state 89:

	exp : LET declist IN END .  (reduce by rule 10)



	.	reduce by rule 10


state 90:

	tydec : TYPE ID EQ . ty 

	ID	shift 108
	LBRACE	shift 107
	ARRAY	shift 106

	ty	goto 105

	.	error


state 91:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 109
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funexp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 92:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 110


	.	error


state 93:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 

	ID	shift 112

	tyfields	goto 111

	.	reduce by rule 55


state 94:

	exp : FOR ID ASSIGN exp . TO exp DO exp 
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21
	TO	shift 113


	.	error


state 95:

	exp : WHILE exp DO exp .  (reduce by rule 6)
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21


	.	reduce by rule 6


state 96:

	exp : IF exp THEN exp . ELSE exp 
	exp : IF exp THEN exp .  (reduce by rule 4)
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21
	ELSE	shift 114


	.	reduce by rule 4


state 97:

	exp : LPAREN exp SEMICOLON exp_seq . RPAREN 
	exp_seq : exp_seq . SEMICOLON exp 

	SEMICOLON	shift 104
	RPAREN	shift 115


	.	error


state 98:

	arrayRecordBuilder : ID LBRACE record_param RBRACE .  (reduce by rule 33)



	.	reduce by rule 33


state 99:

	record_param : ID EQ . exp 
	record_param : ID EQ . exp COMMA record_param 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 116
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funexp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 100:

	lvalue_not_id : ID LBRACK exp RBRACK .  (reduce by rule 43)
	arrayRecordBuilder : ID LBRACK exp RBRACK . OF exp 

	OF	shift 117


	.	reduce by rule 43


state 101:

	funexp : ID LPAREN fun_param RPAREN .  (reduce by rule 61)



	.	reduce by rule 61


state 102:

	fun_param : exp COMMA . fun_param 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 84
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funexp	goto 2
	fun_param	goto 118
	arrayRecordBuilder	goto 1

	.	error


state 103:

	exp : LET declist IN exp_seq END .  (reduce by rule 9)



	.	reduce by rule 9


state 104:

	exp_seq : exp_seq SEMICOLON . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 119
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funexp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 105:

	tydec : TYPE ID EQ ty .  (reduce by rule 52)



	.	reduce by rule 52


state 106:

	ty : ARRAY . OF ID 

	OF	shift 120


	.	error


state 107:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 112

	tyfields	goto 121

	.	reduce by rule 55


state 108:

	ty : ID .  (reduce by rule 49)



	.	reduce by rule 49


state 109:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 
	vardec : VAR ID ASSIGN exp .  (reduce by rule 58)

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21


	.	reduce by rule 58


state 110:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 122


	.	error


state 111:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 

	RPAREN	shift 123


	.	error


state 112:

	tyfields : ID . COLON ID 
	tyfields : ID . COLON ID COMMA tyfields 

	COLON	shift 124


	.	error


state 113:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 125
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funexp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 114:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 126
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funexp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 115:

	exp : LPAREN exp SEMICOLON exp_seq RPAREN .  (reduce by rule 13)



	.	reduce by rule 13


state 116:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 
	record_param : ID EQ exp .  (reduce by rule 35)
	record_param : ID EQ exp . COMMA record_param 

	COMMA	shift 127
	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21


	.	reduce by rule 35


state 117:

	arrayRecordBuilder : ID LBRACK exp RBRACK OF . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 128
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funexp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 118:

	fun_param : exp COMMA fun_param .  (reduce by rule 67)



	.	reduce by rule 67


state 119:

	exp_seq : exp_seq SEMICOLON exp .  (reduce by rule 38)
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21


	.	reduce by rule 38


state 120:

	ty : ARRAY OF . ID 

	ID	shift 129


	.	error


state 121:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 130


	.	error


state 122:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 131
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funexp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 123:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 

	COLON	shift 133
	EQ	shift 132


	.	error


state 124:

	tyfields : ID COLON . ID 
	tyfields : ID COLON . ID COMMA tyfields 

	ID	shift 134


	.	error


state 125:

	exp : FOR ID ASSIGN exp TO exp . DO exp 
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21
	DO	shift 135


	.	error


state 126:

	exp : IF exp THEN exp ELSE exp .  (reduce by rule 3)
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21


	.	reduce by rule 3


state 127:

	record_param : ID EQ exp COMMA . record_param 

	ID	shift 81

	record_param	goto 136

	.	error


state 128:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 
	arrayRecordBuilder : ID LBRACK exp RBRACK OF exp .  (reduce by rule 32)

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21


	.	reduce by rule 32


state 129:

	ty : ARRAY OF ID .  (reduce by rule 51)



	.	reduce by rule 51


state 130:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 50)



	.	reduce by rule 50


state 131:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 
	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 59)

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21


	.	reduce by rule 59


state 132:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 137
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funexp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 133:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 138


	.	error


state 134:

	tyfields : ID COLON ID .  (reduce by rule 56)
	tyfields : ID COLON ID . COMMA tyfields 

	COMMA	shift 139


	.	reduce by rule 56


state 135:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 140
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funexp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 136:

	record_param : ID EQ exp COMMA record_param .  (reduce by rule 36)



	.	reduce by rule 36


state 137:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 63)

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21


	.	reduce by rule 63


state 138:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 141


	.	error


state 139:

	tyfields : ID COLON ID COMMA . tyfields 

	ID	shift 112

	tyfields	goto 142

	.	reduce by rule 55


state 140:

	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 7)
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21


	.	reduce by rule 7


state 141:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 143
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funexp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 142:

	tyfields : ID COLON ID COMMA tyfields .  (reduce by rule 57)



	.	reduce by rule 57


state 143:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 62)

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21


	.	reduce by rule 62


state 144:


	EOF	accept


	.	error

527 of 1037 action table entries left after compaction
248 goto table entries
