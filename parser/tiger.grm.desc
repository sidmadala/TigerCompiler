2 shift/reduce conflicts

error:  state 33: shift/reduce conflict (shift TYPE, reduce by rule 45)
error:  state 38: shift/reduce conflict (shift FUNCTION, reduce by rule 44)

state 0:

	program : . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	program	goto 137
	exp	goto 6
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 1:

	exp : arrayRecordBuilder .  (reduce by rule 16)



	.	reduce by rule 16


state 2:

	exp : funExp .  (reduce by rule 17)



	.	reduce by rule 17


state 3:

	exp : lvalue_not_id .  (reduce by rule 14)
	lvalue : lvalue_not_id .  (reduce by rule 40)
	lvalue_not_id : lvalue_not_id . LBRACK exp RBRACK 

	EOF	reduce by rule 14
	COMMA	reduce by rule 14
	SEMICOLON	reduce by rule 14
	RPAREN	reduce by rule 14
	LBRACK	shift 18
	RBRACK	reduce by rule 14
	RBRACE	reduce by rule 14
	DOT	reduce by rule 40
	PLUS	reduce by rule 14
	MINUS	reduce by rule 14
	TIMES	reduce by rule 14
	DIVIDE	reduce by rule 14
	EQ	reduce by rule 14
	NEQ	reduce by rule 14
	LT	reduce by rule 14
	LE	reduce by rule 14
	GT	reduce by rule 14
	GE	reduce by rule 14
	AND	reduce by rule 14
	OR	reduce by rule 14
	ASSIGN	reduce by rule 40
	THEN	reduce by rule 14
	ELSE	reduce by rule 14
	TO	reduce by rule 14
	DO	reduce by rule 14
	IN	reduce by rule 14
	END	reduce by rule 14
	FUNCTION	reduce by rule 14
	VAR	reduce by rule 14
	TYPE	reduce by rule 14


	.	error


state 4:

	exp : lvalue . ASSIGN exp 
	lvalue_not_id : lvalue . DOT ID 

	DOT	shift 20
	ASSIGN	shift 19


	.	error


state 5:

	exp : opexp .  (reduce by rule 5)



	.	reduce by rule 5


state 6:

	program : exp .  (reduce by rule 0)
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21


	.	reduce by rule 0


state 7:

	exp : NIL .  (reduce by rule 1)



	.	reduce by rule 1


state 8:

	exp : BREAK .  (reduce by rule 8)



	.	reduce by rule 8


state 9:

	exp : LET . declist IN exp_seq END 
	exp : LET . declist IN END 

	FUNCTION	shift 42
	VAR	shift 41
	TYPE	shift 40

	fundec	goto 39
	funlist	goto 38
	dec	goto 37
	declist	goto 36
	vardec	goto 35
	tydec	goto 34
	tylist	goto 33

	.	error


state 10:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 43


	.	error


state 11:

	exp : WHILE . exp DO exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 44
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 12:

	exp : IF . exp THEN exp ELSE exp 
	exp : IF . exp THEN exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 45
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 13:

	opexp : MINUS . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 46
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 14:

	exp : LPAREN . exp RPAREN 
	exp : LPAREN . RPAREN 
	exp : LPAREN . exp SEMICOLON exp_seq RPAREN 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	RPAREN	shift 48
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 47
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 15:

	exp : STRING .  (reduce by rule 2)



	.	reduce by rule 2


state 16:

	opexp : INT .  (reduce by rule 31)



	.	reduce by rule 31


state 17:

	lvalue : ID .  (reduce by rule 39)
	lvalue_not_id : ID . LBRACK exp RBRACK 
	arrayRecordBuilder : ID . LBRACK exp RBRACK OF exp 
	arrayRecordBuilder : ID . LBRACE record_param RBRACE 
	arrayRecordBuilder : ID . LBRACE RBRACE 

	LBRACK	shift 50
	LBRACE	shift 49


	.	reduce by rule 39


state 18:

	lvalue_not_id : lvalue_not_id LBRACK . exp RBRACK 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 51
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 19:

	exp : lvalue ASSIGN . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 52
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 20:

	lvalue_not_id : lvalue DOT . ID 

	ID	shift 53


	.	error


state 21:

	opexp : exp OR . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 54
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 22:

	opexp : exp AND . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 55
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 23:

	opexp : exp GE . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 56
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 24:

	opexp : exp GT . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 57
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 25:

	opexp : exp LE . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 58
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 26:

	opexp : exp LT . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 59
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 27:

	opexp : exp NEQ . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 60
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 28:

	opexp : exp EQ . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 61
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 29:

	opexp : exp DIVIDE . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 62
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 30:

	opexp : exp TIMES . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 63
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 31:

	opexp : exp MINUS . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 64
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 32:

	opexp : exp PLUS . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 65
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error

error:  state 33: shift/reduce conflict (shift TYPE, reduce by rule 45)

state 33:

	dec : tylist .  (reduce by rule 45)
	tylist : tylist . tydec 

	TYPE	shift 40

	tydec	goto 66

	.	reduce by rule 45


state 34:

	tylist : tydec .  (reduce by rule 53)



	.	reduce by rule 53


state 35:

	dec : vardec .  (reduce by rule 46)



	.	reduce by rule 46


state 36:

	exp : LET declist . IN exp_seq END 
	exp : LET declist . IN END 
	declist : declist . dec 

	IN	shift 68
	FUNCTION	shift 42
	VAR	shift 41
	TYPE	shift 40

	fundec	goto 39
	funlist	goto 38
	dec	goto 67
	vardec	goto 35
	tydec	goto 34
	tylist	goto 33

	.	error


state 37:

	declist : dec .  (reduce by rule 47)



	.	reduce by rule 47

error:  state 38: shift/reduce conflict (shift FUNCTION, reduce by rule 44)

state 38:

	funlist : funlist . fundec 
	dec : funlist .  (reduce by rule 44)

	FUNCTION	shift 42

	fundec	goto 69

	.	reduce by rule 44


state 39:

	funlist : fundec .  (reduce by rule 62)



	.	reduce by rule 62


state 40:

	tydec : TYPE . ID EQ ty 

	ID	shift 70


	.	error


state 41:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 71


	.	error


state 42:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 

	ID	shift 72


	.	error


state 43:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 73


	.	error


state 44:

	exp : WHILE exp . DO exp 
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21
	DO	shift 74


	.	error


state 45:

	exp : IF exp . THEN exp ELSE exp 
	exp : IF exp . THEN exp 
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21
	THEN	shift 75


	.	error


state 46:

	opexp : MINUS exp .  (reduce by rule 18)
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 



	.	reduce by rule 18


state 47:

	exp : LPAREN exp . RPAREN 
	exp : LPAREN exp . SEMICOLON exp_seq RPAREN 
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	SEMICOLON	shift 77
	RPAREN	shift 76
	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21


	.	error


state 48:

	exp : LPAREN RPAREN .  (reduce by rule 12)



	.	reduce by rule 12


state 49:

	arrayRecordBuilder : ID LBRACE . record_param RBRACE 
	arrayRecordBuilder : ID LBRACE . RBRACE 

	ID	shift 80
	RBRACE	shift 79

	record_param	goto 78

	.	error


state 50:

	lvalue_not_id : ID LBRACK . exp RBRACK 
	arrayRecordBuilder : ID LBRACK . exp RBRACK OF exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 81
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 51:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 
	lvalue_not_id : lvalue_not_id LBRACK exp . RBRACK 

	RBRACK	shift 82
	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21


	.	error


state 52:

	exp : lvalue ASSIGN exp .  (reduce by rule 15)
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21


	.	reduce by rule 15


state 53:

	lvalue_not_id : lvalue DOT ID .  (reduce by rule 41)



	.	reduce by rule 41


state 54:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 
	opexp : exp OR exp .  (reduce by rule 30)

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22


	.	reduce by rule 30


state 55:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp AND exp .  (reduce by rule 29)
	opexp : exp . OR exp 

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23


	.	reduce by rule 29


state 56:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp GE exp .  (reduce by rule 28)
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	EOF	reduce by rule 28
	COMMA	reduce by rule 28
	SEMICOLON	reduce by rule 28
	RPAREN	reduce by rule 28
	RBRACK	reduce by rule 28
	RBRACE	reduce by rule 28
	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	AND	reduce by rule 28
	OR	reduce by rule 28
	THEN	reduce by rule 28
	ELSE	reduce by rule 28
	TO	reduce by rule 28
	DO	reduce by rule 28
	IN	reduce by rule 28
	END	reduce by rule 28
	FUNCTION	reduce by rule 28
	VAR	reduce by rule 28
	TYPE	reduce by rule 28


	.	error


state 57:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp GT exp .  (reduce by rule 27)
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	EOF	reduce by rule 27
	COMMA	reduce by rule 27
	SEMICOLON	reduce by rule 27
	RPAREN	reduce by rule 27
	RBRACK	reduce by rule 27
	RBRACE	reduce by rule 27
	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	AND	reduce by rule 27
	OR	reduce by rule 27
	THEN	reduce by rule 27
	ELSE	reduce by rule 27
	TO	reduce by rule 27
	DO	reduce by rule 27
	IN	reduce by rule 27
	END	reduce by rule 27
	FUNCTION	reduce by rule 27
	VAR	reduce by rule 27
	TYPE	reduce by rule 27


	.	error


state 58:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp LE exp .  (reduce by rule 26)
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	EOF	reduce by rule 26
	COMMA	reduce by rule 26
	SEMICOLON	reduce by rule 26
	RPAREN	reduce by rule 26
	RBRACK	reduce by rule 26
	RBRACE	reduce by rule 26
	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	AND	reduce by rule 26
	OR	reduce by rule 26
	THEN	reduce by rule 26
	ELSE	reduce by rule 26
	TO	reduce by rule 26
	DO	reduce by rule 26
	IN	reduce by rule 26
	END	reduce by rule 26
	FUNCTION	reduce by rule 26
	VAR	reduce by rule 26
	TYPE	reduce by rule 26


	.	error


state 59:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp LT exp .  (reduce by rule 25)
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	EOF	reduce by rule 25
	COMMA	reduce by rule 25
	SEMICOLON	reduce by rule 25
	RPAREN	reduce by rule 25
	RBRACK	reduce by rule 25
	RBRACE	reduce by rule 25
	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	AND	reduce by rule 25
	OR	reduce by rule 25
	THEN	reduce by rule 25
	ELSE	reduce by rule 25
	TO	reduce by rule 25
	DO	reduce by rule 25
	IN	reduce by rule 25
	END	reduce by rule 25
	FUNCTION	reduce by rule 25
	VAR	reduce by rule 25
	TYPE	reduce by rule 25


	.	error


state 60:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp NEQ exp .  (reduce by rule 24)
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	EOF	reduce by rule 24
	COMMA	reduce by rule 24
	SEMICOLON	reduce by rule 24
	RPAREN	reduce by rule 24
	RBRACK	reduce by rule 24
	RBRACE	reduce by rule 24
	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	AND	reduce by rule 24
	OR	reduce by rule 24
	THEN	reduce by rule 24
	ELSE	reduce by rule 24
	TO	reduce by rule 24
	DO	reduce by rule 24
	IN	reduce by rule 24
	END	reduce by rule 24
	FUNCTION	reduce by rule 24
	VAR	reduce by rule 24
	TYPE	reduce by rule 24


	.	error


state 61:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp EQ exp .  (reduce by rule 23)
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	EOF	reduce by rule 23
	COMMA	reduce by rule 23
	SEMICOLON	reduce by rule 23
	RPAREN	reduce by rule 23
	RBRACK	reduce by rule 23
	RBRACE	reduce by rule 23
	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	AND	reduce by rule 23
	OR	reduce by rule 23
	THEN	reduce by rule 23
	ELSE	reduce by rule 23
	TO	reduce by rule 23
	DO	reduce by rule 23
	IN	reduce by rule 23
	END	reduce by rule 23
	FUNCTION	reduce by rule 23
	VAR	reduce by rule 23
	TYPE	reduce by rule 23


	.	error


state 62:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp DIVIDE exp .  (reduce by rule 22)
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 



	.	reduce by rule 22


state 63:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp TIMES exp .  (reduce by rule 21)
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 



	.	reduce by rule 21


state 64:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp MINUS exp .  (reduce by rule 20)
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	TIMES	shift 30
	DIVIDE	shift 29


	.	reduce by rule 20


state 65:

	opexp : exp . PLUS exp 
	opexp : exp PLUS exp .  (reduce by rule 19)
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	TIMES	shift 30
	DIVIDE	shift 29


	.	reduce by rule 19


state 66:

	tylist : tylist tydec .  (reduce by rule 54)



	.	reduce by rule 54


state 67:

	declist : declist dec .  (reduce by rule 48)



	.	reduce by rule 48


state 68:

	exp : LET declist IN . exp_seq END 
	exp : LET declist IN . END 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	END	shift 85
	BREAK	shift 8
	NIL	shift 7

	exp	goto 84
	exp_seq	goto 83
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 69:

	funlist : funlist fundec .  (reduce by rule 63)



	.	reduce by rule 63


state 70:

	tydec : TYPE ID . EQ ty 

	EQ	shift 86


	.	error


state 71:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 88
	ASSIGN	shift 87


	.	error


state 72:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 

	LPAREN	shift 89


	.	error


state 73:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 90
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 74:

	exp : WHILE exp DO . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 91
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 75:

	exp : IF exp THEN . exp ELSE exp 
	exp : IF exp THEN . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 92
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 76:

	exp : LPAREN exp RPAREN .  (reduce by rule 11)



	.	reduce by rule 11


state 77:

	exp : LPAREN exp SEMICOLON . exp_seq RPAREN 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 84
	exp_seq	goto 93
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 78:

	arrayRecordBuilder : ID LBRACE record_param . RBRACE 

	RBRACE	shift 94


	.	error


state 79:

	arrayRecordBuilder : ID LBRACE RBRACE .  (reduce by rule 34)



	.	reduce by rule 34


state 80:

	record_param : ID . EQ exp 
	record_param : ID . EQ exp COMMA record_param 

	EQ	shift 95


	.	error


state 81:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 
	lvalue_not_id : ID LBRACK exp . RBRACK 
	arrayRecordBuilder : ID LBRACK exp . RBRACK OF exp 

	RBRACK	shift 96
	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21


	.	error


state 82:

	lvalue_not_id : lvalue_not_id LBRACK exp RBRACK .  (reduce by rule 42)



	.	reduce by rule 42


state 83:

	exp : LET declist IN exp_seq . END 
	exp_seq : exp_seq . SEMICOLON exp 

	SEMICOLON	shift 98
	END	shift 97


	.	error


state 84:

	exp_seq : exp .  (reduce by rule 37)
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21


	.	reduce by rule 37


state 85:

	exp : LET declist IN END .  (reduce by rule 10)



	.	reduce by rule 10


state 86:

	tydec : TYPE ID EQ . ty 

	ID	shift 102
	LBRACE	shift 101
	ARRAY	shift 100

	ty	goto 99

	.	error


state 87:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 103
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 88:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 104


	.	error


state 89:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 

	ID	shift 106

	tyfields	goto 105

	.	reduce by rule 55


state 90:

	exp : FOR ID ASSIGN exp . TO exp DO exp 
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21
	TO	shift 107


	.	error


state 91:

	exp : WHILE exp DO exp .  (reduce by rule 6)
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21


	.	reduce by rule 6


state 92:

	exp : IF exp THEN exp . ELSE exp 
	exp : IF exp THEN exp .  (reduce by rule 4)
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21
	ELSE	shift 108


	.	reduce by rule 4


state 93:

	exp : LPAREN exp SEMICOLON exp_seq . RPAREN 
	exp_seq : exp_seq . SEMICOLON exp 

	SEMICOLON	shift 98
	RPAREN	shift 109


	.	error


state 94:

	arrayRecordBuilder : ID LBRACE record_param RBRACE .  (reduce by rule 33)



	.	reduce by rule 33


state 95:

	record_param : ID EQ . exp 
	record_param : ID EQ . exp COMMA record_param 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 110
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 96:

	lvalue_not_id : ID LBRACK exp RBRACK .  (reduce by rule 43)
	arrayRecordBuilder : ID LBRACK exp RBRACK . OF exp 

	OF	shift 111


	.	reduce by rule 43


state 97:

	exp : LET declist IN exp_seq END .  (reduce by rule 9)



	.	reduce by rule 9


state 98:

	exp_seq : exp_seq SEMICOLON . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 112
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 99:

	tydec : TYPE ID EQ ty .  (reduce by rule 52)



	.	reduce by rule 52


state 100:

	ty : ARRAY . OF ID 

	OF	shift 113


	.	error


state 101:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 106

	tyfields	goto 114

	.	reduce by rule 55


state 102:

	ty : ID .  (reduce by rule 49)



	.	reduce by rule 49


state 103:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 
	vardec : VAR ID ASSIGN exp .  (reduce by rule 58)

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21


	.	reduce by rule 58


state 104:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 115


	.	error


state 105:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 

	RPAREN	shift 116


	.	error


state 106:

	tyfields : ID . COLON ID 
	tyfields : ID . COLON ID COMMA tyfields 

	COLON	shift 117


	.	error


state 107:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 118
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 108:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 119
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 109:

	exp : LPAREN exp SEMICOLON exp_seq RPAREN .  (reduce by rule 13)



	.	reduce by rule 13


state 110:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 
	record_param : ID EQ exp .  (reduce by rule 35)
	record_param : ID EQ exp . COMMA record_param 

	COMMA	shift 120
	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21


	.	reduce by rule 35


state 111:

	arrayRecordBuilder : ID LBRACK exp RBRACK OF . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 121
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 112:

	exp_seq : exp_seq SEMICOLON exp .  (reduce by rule 38)
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21


	.	reduce by rule 38


state 113:

	ty : ARRAY OF . ID 

	ID	shift 122


	.	error


state 114:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 123


	.	error


state 115:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 124
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 116:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 

	COLON	shift 126
	EQ	shift 125


	.	error


state 117:

	tyfields : ID COLON . ID 
	tyfields : ID COLON . ID COMMA tyfields 

	ID	shift 127


	.	error


state 118:

	exp : FOR ID ASSIGN exp TO exp . DO exp 
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21
	DO	shift 128


	.	error


state 119:

	exp : IF exp THEN exp ELSE exp .  (reduce by rule 3)
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21


	.	reduce by rule 3


state 120:

	record_param : ID EQ exp COMMA . record_param 

	ID	shift 80

	record_param	goto 129

	.	error


state 121:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 
	arrayRecordBuilder : ID LBRACK exp RBRACK OF exp .  (reduce by rule 32)

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21


	.	reduce by rule 32


state 122:

	ty : ARRAY OF ID .  (reduce by rule 51)



	.	reduce by rule 51


state 123:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 50)



	.	reduce by rule 50


state 124:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 
	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 59)

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21


	.	reduce by rule 59


state 125:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 130
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 126:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 131


	.	error


state 127:

	tyfields : ID COLON ID .  (reduce by rule 56)
	tyfields : ID COLON ID . COMMA tyfields 

	COMMA	shift 132


	.	reduce by rule 56


state 128:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 133
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 129:

	record_param : ID EQ exp COMMA record_param .  (reduce by rule 36)



	.	reduce by rule 36


state 130:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 61)

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21


	.	reduce by rule 61


state 131:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 134


	.	error


state 132:

	tyfields : ID COLON ID COMMA . tyfields 

	ID	shift 106

	tyfields	goto 135

	.	reduce by rule 55


state 133:

	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 7)
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21


	.	reduce by rule 7


state 134:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	IF	shift 12
	WHILE	shift 11
	FOR	shift 10
	LET	shift 9
	BREAK	shift 8
	NIL	shift 7

	exp	goto 136
	opexp	goto 5
	lvalue	goto 4
	lvalue_not_id	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 135:

	tyfields : ID COLON ID COMMA tyfields .  (reduce by rule 57)



	.	reduce by rule 57


state 136:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 60)

	PLUS	shift 32
	MINUS	shift 31
	TIMES	shift 30
	DIVIDE	shift 29
	EQ	shift 28
	NEQ	shift 27
	LT	shift 26
	LE	shift 25
	GT	shift 24
	GE	shift 23
	AND	shift 22
	OR	shift 21


	.	reduce by rule 60


state 137:


	EOF	accept


	.	error

529 of 1021 action table entries left after compaction
234 goto table entries
