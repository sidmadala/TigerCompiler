3 shift/reduce conflicts

error:  state 16: shift/reduce conflict (shift LBRACK, reduce by rule 39)
error:  state 32: shift/reduce conflict (shift TYPE, reduce by rule 44)
error:  state 37: shift/reduce conflict (shift FUNCTION, reduce by rule 43)

state 0:

	program : . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	program	goto 136
	exp	goto 5
	opexp	goto 4
	lvalue	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 1:

	exp : arrayRecordBuilder .  (reduce by rule 16)



	.	reduce by rule 16


state 2:

	exp : funExp .  (reduce by rule 17)



	.	reduce by rule 17


state 3:

	exp : lvalue .  (reduce by rule 14)
	exp : lvalue . ASSIGN exp 
	lvalue : lvalue . DOT ID 
	lvalue : lvalue . LBRACK exp RBRACK 

	LBRACK	shift 19
	DOT	shift 18
	ASSIGN	shift 17


	.	reduce by rule 14


state 4:

	exp : opexp .  (reduce by rule 5)



	.	reduce by rule 5


state 5:

	program : exp .  (reduce by rule 0)
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 0


state 6:

	exp : NIL .  (reduce by rule 1)



	.	reduce by rule 1


state 7:

	exp : BREAK .  (reduce by rule 8)



	.	reduce by rule 8


state 8:

	exp : LET . declist IN exp_seq END 
	exp : LET . declist IN END 

	FUNCTION	shift 41
	VAR	shift 40
	TYPE	shift 39

	fundec	goto 38
	funlist	goto 37
	dec	goto 36
	declist	goto 35
	vardec	goto 34
	tydec	goto 33
	tylist	goto 32

	.	error


state 9:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 42


	.	error


state 10:

	exp : WHILE . exp DO exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 43
	opexp	goto 4
	lvalue	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 11:

	exp : IF . exp THEN exp ELSE exp 
	exp : IF . exp THEN exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 44
	opexp	goto 4
	lvalue	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 12:

	opexp : MINUS . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 45
	opexp	goto 4
	lvalue	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 13:

	exp : LPAREN . exp RPAREN 
	exp : LPAREN . RPAREN 
	exp : LPAREN . exp SEMICOLON exp_seq RPAREN 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	RPAREN	shift 47
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 46
	opexp	goto 4
	lvalue	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 14:

	exp : STRING .  (reduce by rule 2)



	.	reduce by rule 2


state 15:

	opexp : INT .  (reduce by rule 31)



	.	reduce by rule 31

error:  state 16: shift/reduce conflict (shift LBRACK, reduce by rule 39)

state 16:

	lvalue : ID .  (reduce by rule 39)
	lvalue : ID . LBRACK exp RBRACK 
	arrayRecordBuilder : ID . LBRACK exp RBRACK OF exp 
	arrayRecordBuilder : ID . LBRACE record_param RBRACE 
	arrayRecordBuilder : ID . LBRACE RBRACE 

	LBRACK	shift 49
	LBRACE	shift 48


	.	reduce by rule 39


state 17:

	exp : lvalue ASSIGN . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 50
	opexp	goto 4
	lvalue	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 18:

	lvalue : lvalue DOT . ID 

	ID	shift 51


	.	error


state 19:

	lvalue : lvalue LBRACK . exp RBRACK 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 52
	opexp	goto 4
	lvalue	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 20:

	opexp : exp OR . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 53
	opexp	goto 4
	lvalue	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 21:

	opexp : exp AND . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 54
	opexp	goto 4
	lvalue	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 22:

	opexp : exp GE . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 55
	opexp	goto 4
	lvalue	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 23:

	opexp : exp GT . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 56
	opexp	goto 4
	lvalue	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 24:

	opexp : exp LE . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 57
	opexp	goto 4
	lvalue	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 25:

	opexp : exp LT . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 58
	opexp	goto 4
	lvalue	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 26:

	opexp : exp NEQ . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 59
	opexp	goto 4
	lvalue	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 27:

	opexp : exp EQ . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 60
	opexp	goto 4
	lvalue	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 28:

	opexp : exp DIVIDE . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 61
	opexp	goto 4
	lvalue	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 29:

	opexp : exp TIMES . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 62
	opexp	goto 4
	lvalue	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 30:

	opexp : exp MINUS . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 63
	opexp	goto 4
	lvalue	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 31:

	opexp : exp PLUS . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 64
	opexp	goto 4
	lvalue	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error

error:  state 32: shift/reduce conflict (shift TYPE, reduce by rule 44)

state 32:

	dec : tylist .  (reduce by rule 44)
	tylist : tylist . tydec 

	TYPE	shift 39

	tydec	goto 65

	.	reduce by rule 44


state 33:

	tylist : tydec .  (reduce by rule 52)



	.	reduce by rule 52


state 34:

	dec : vardec .  (reduce by rule 45)



	.	reduce by rule 45


state 35:

	exp : LET declist . IN exp_seq END 
	exp : LET declist . IN END 
	declist : declist . dec 

	IN	shift 67
	FUNCTION	shift 41
	VAR	shift 40
	TYPE	shift 39

	fundec	goto 38
	funlist	goto 37
	dec	goto 66
	vardec	goto 34
	tydec	goto 33
	tylist	goto 32

	.	error


state 36:

	declist : dec .  (reduce by rule 46)



	.	reduce by rule 46

error:  state 37: shift/reduce conflict (shift FUNCTION, reduce by rule 43)

state 37:

	funlist : funlist . fundec 
	dec : funlist .  (reduce by rule 43)

	FUNCTION	shift 41

	fundec	goto 68

	.	reduce by rule 43


state 38:

	funlist : fundec .  (reduce by rule 61)



	.	reduce by rule 61


state 39:

	tydec : TYPE . ID EQ ty 

	ID	shift 69


	.	error


state 40:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 70


	.	error


state 41:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 

	ID	shift 71


	.	error


state 42:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 72


	.	error


state 43:

	exp : WHILE exp . DO exp 
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20
	DO	shift 73


	.	error


state 44:

	exp : IF exp . THEN exp ELSE exp 
	exp : IF exp . THEN exp 
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20
	THEN	shift 74


	.	error


state 45:

	opexp : MINUS exp .  (reduce by rule 18)
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 



	.	reduce by rule 18


state 46:

	exp : LPAREN exp . RPAREN 
	exp : LPAREN exp . SEMICOLON exp_seq RPAREN 
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	SEMICOLON	shift 76
	RPAREN	shift 75
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	error


state 47:

	exp : LPAREN RPAREN .  (reduce by rule 12)



	.	reduce by rule 12


state 48:

	arrayRecordBuilder : ID LBRACE . record_param RBRACE 
	arrayRecordBuilder : ID LBRACE . RBRACE 

	ID	shift 79
	RBRACE	shift 78

	record_param	goto 77

	.	error


state 49:

	lvalue : ID LBRACK . exp RBRACK 
	arrayRecordBuilder : ID LBRACK . exp RBRACK OF exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 80
	opexp	goto 4
	lvalue	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 50:

	exp : lvalue ASSIGN exp .  (reduce by rule 15)
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 15


state 51:

	lvalue : lvalue DOT ID .  (reduce by rule 40)



	.	reduce by rule 40


state 52:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 
	lvalue : lvalue LBRACK exp . RBRACK 

	RBRACK	shift 81
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	error


state 53:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 
	opexp : exp OR exp .  (reduce by rule 30)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21


	.	reduce by rule 30


state 54:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp AND exp .  (reduce by rule 29)
	opexp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22


	.	reduce by rule 29


state 55:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp GE exp .  (reduce by rule 28)
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	EOF	reduce by rule 28
	COMMA	reduce by rule 28
	SEMICOLON	reduce by rule 28
	RPAREN	reduce by rule 28
	RBRACK	reduce by rule 28
	RBRACE	reduce by rule 28
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	AND	reduce by rule 28
	OR	reduce by rule 28
	THEN	reduce by rule 28
	ELSE	reduce by rule 28
	TO	reduce by rule 28
	DO	reduce by rule 28
	IN	reduce by rule 28
	END	reduce by rule 28
	FUNCTION	reduce by rule 28
	VAR	reduce by rule 28
	TYPE	reduce by rule 28


	.	error


state 56:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp GT exp .  (reduce by rule 27)
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	EOF	reduce by rule 27
	COMMA	reduce by rule 27
	SEMICOLON	reduce by rule 27
	RPAREN	reduce by rule 27
	RBRACK	reduce by rule 27
	RBRACE	reduce by rule 27
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	AND	reduce by rule 27
	OR	reduce by rule 27
	THEN	reduce by rule 27
	ELSE	reduce by rule 27
	TO	reduce by rule 27
	DO	reduce by rule 27
	IN	reduce by rule 27
	END	reduce by rule 27
	FUNCTION	reduce by rule 27
	VAR	reduce by rule 27
	TYPE	reduce by rule 27


	.	error


state 57:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp LE exp .  (reduce by rule 26)
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	EOF	reduce by rule 26
	COMMA	reduce by rule 26
	SEMICOLON	reduce by rule 26
	RPAREN	reduce by rule 26
	RBRACK	reduce by rule 26
	RBRACE	reduce by rule 26
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	AND	reduce by rule 26
	OR	reduce by rule 26
	THEN	reduce by rule 26
	ELSE	reduce by rule 26
	TO	reduce by rule 26
	DO	reduce by rule 26
	IN	reduce by rule 26
	END	reduce by rule 26
	FUNCTION	reduce by rule 26
	VAR	reduce by rule 26
	TYPE	reduce by rule 26


	.	error


state 58:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp LT exp .  (reduce by rule 25)
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	EOF	reduce by rule 25
	COMMA	reduce by rule 25
	SEMICOLON	reduce by rule 25
	RPAREN	reduce by rule 25
	RBRACK	reduce by rule 25
	RBRACE	reduce by rule 25
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	AND	reduce by rule 25
	OR	reduce by rule 25
	THEN	reduce by rule 25
	ELSE	reduce by rule 25
	TO	reduce by rule 25
	DO	reduce by rule 25
	IN	reduce by rule 25
	END	reduce by rule 25
	FUNCTION	reduce by rule 25
	VAR	reduce by rule 25
	TYPE	reduce by rule 25


	.	error


state 59:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp NEQ exp .  (reduce by rule 24)
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	EOF	reduce by rule 24
	COMMA	reduce by rule 24
	SEMICOLON	reduce by rule 24
	RPAREN	reduce by rule 24
	RBRACK	reduce by rule 24
	RBRACE	reduce by rule 24
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	AND	reduce by rule 24
	OR	reduce by rule 24
	THEN	reduce by rule 24
	ELSE	reduce by rule 24
	TO	reduce by rule 24
	DO	reduce by rule 24
	IN	reduce by rule 24
	END	reduce by rule 24
	FUNCTION	reduce by rule 24
	VAR	reduce by rule 24
	TYPE	reduce by rule 24


	.	error


state 60:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp EQ exp .  (reduce by rule 23)
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	EOF	reduce by rule 23
	COMMA	reduce by rule 23
	SEMICOLON	reduce by rule 23
	RPAREN	reduce by rule 23
	RBRACK	reduce by rule 23
	RBRACE	reduce by rule 23
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	AND	reduce by rule 23
	OR	reduce by rule 23
	THEN	reduce by rule 23
	ELSE	reduce by rule 23
	TO	reduce by rule 23
	DO	reduce by rule 23
	IN	reduce by rule 23
	END	reduce by rule 23
	FUNCTION	reduce by rule 23
	VAR	reduce by rule 23
	TYPE	reduce by rule 23


	.	error


state 61:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp DIVIDE exp .  (reduce by rule 22)
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 



	.	reduce by rule 22


state 62:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp TIMES exp .  (reduce by rule 21)
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 



	.	reduce by rule 21


state 63:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp MINUS exp .  (reduce by rule 20)
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	TIMES	shift 29
	DIVIDE	shift 28


	.	reduce by rule 20


state 64:

	opexp : exp . PLUS exp 
	opexp : exp PLUS exp .  (reduce by rule 19)
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	TIMES	shift 29
	DIVIDE	shift 28


	.	reduce by rule 19


state 65:

	tylist : tylist tydec .  (reduce by rule 53)



	.	reduce by rule 53


state 66:

	declist : declist dec .  (reduce by rule 47)



	.	reduce by rule 47


state 67:

	exp : LET declist IN . exp_seq END 
	exp : LET declist IN . END 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	END	shift 84
	BREAK	shift 7
	NIL	shift 6

	exp	goto 83
	exp_seq	goto 82
	opexp	goto 4
	lvalue	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 68:

	funlist : funlist fundec .  (reduce by rule 62)



	.	reduce by rule 62


state 69:

	tydec : TYPE ID . EQ ty 

	EQ	shift 85


	.	error


state 70:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 87
	ASSIGN	shift 86


	.	error


state 71:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 

	LPAREN	shift 88


	.	error


state 72:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 89
	opexp	goto 4
	lvalue	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 73:

	exp : WHILE exp DO . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 90
	opexp	goto 4
	lvalue	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 74:

	exp : IF exp THEN . exp ELSE exp 
	exp : IF exp THEN . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 91
	opexp	goto 4
	lvalue	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 75:

	exp : LPAREN exp RPAREN .  (reduce by rule 11)



	.	reduce by rule 11


state 76:

	exp : LPAREN exp SEMICOLON . exp_seq RPAREN 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 83
	exp_seq	goto 92
	opexp	goto 4
	lvalue	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 77:

	arrayRecordBuilder : ID LBRACE record_param . RBRACE 

	RBRACE	shift 93


	.	error


state 78:

	arrayRecordBuilder : ID LBRACE RBRACE .  (reduce by rule 34)



	.	reduce by rule 34


state 79:

	record_param : ID . EQ exp 
	record_param : ID . EQ exp COMMA record_param 

	EQ	shift 94


	.	error


state 80:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 
	lvalue : ID LBRACK exp . RBRACK 
	arrayRecordBuilder : ID LBRACK exp . RBRACK OF exp 

	RBRACK	shift 95
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	error


state 81:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 41)



	.	reduce by rule 41


state 82:

	exp : LET declist IN exp_seq . END 
	exp_seq : exp_seq . SEMICOLON exp 

	SEMICOLON	shift 97
	END	shift 96


	.	error


state 83:

	exp_seq : exp .  (reduce by rule 37)
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 37


state 84:

	exp : LET declist IN END .  (reduce by rule 10)



	.	reduce by rule 10


state 85:

	tydec : TYPE ID EQ . ty 

	ID	shift 101
	LBRACE	shift 100
	ARRAY	shift 99

	ty	goto 98

	.	error


state 86:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 102
	opexp	goto 4
	lvalue	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 87:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 103


	.	error


state 88:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 

	ID	shift 105

	tyfields	goto 104

	.	reduce by rule 54


state 89:

	exp : FOR ID ASSIGN exp . TO exp DO exp 
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20
	TO	shift 106


	.	error


state 90:

	exp : WHILE exp DO exp .  (reduce by rule 6)
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 6


state 91:

	exp : IF exp THEN exp . ELSE exp 
	exp : IF exp THEN exp .  (reduce by rule 4)
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20
	ELSE	shift 107


	.	reduce by rule 4


state 92:

	exp : LPAREN exp SEMICOLON exp_seq . RPAREN 
	exp_seq : exp_seq . SEMICOLON exp 

	SEMICOLON	shift 97
	RPAREN	shift 108


	.	error


state 93:

	arrayRecordBuilder : ID LBRACE record_param RBRACE .  (reduce by rule 33)



	.	reduce by rule 33


state 94:

	record_param : ID EQ . exp 
	record_param : ID EQ . exp COMMA record_param 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 109
	opexp	goto 4
	lvalue	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 95:

	lvalue : ID LBRACK exp RBRACK .  (reduce by rule 42)
	arrayRecordBuilder : ID LBRACK exp RBRACK . OF exp 

	OF	shift 110


	.	reduce by rule 42


state 96:

	exp : LET declist IN exp_seq END .  (reduce by rule 9)



	.	reduce by rule 9


state 97:

	exp_seq : exp_seq SEMICOLON . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 111
	opexp	goto 4
	lvalue	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 98:

	tydec : TYPE ID EQ ty .  (reduce by rule 51)



	.	reduce by rule 51


state 99:

	ty : ARRAY . OF ID 

	OF	shift 112


	.	error


state 100:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 105

	tyfields	goto 113

	.	reduce by rule 54


state 101:

	ty : ID .  (reduce by rule 48)



	.	reduce by rule 48


state 102:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 
	vardec : VAR ID ASSIGN exp .  (reduce by rule 57)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 57


state 103:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 114


	.	error


state 104:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 

	RPAREN	shift 115


	.	error


state 105:

	tyfields : ID . COLON ID 
	tyfields : ID . COLON ID COMMA tyfields 

	COLON	shift 116


	.	error


state 106:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 117
	opexp	goto 4
	lvalue	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 107:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 118
	opexp	goto 4
	lvalue	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 108:

	exp : LPAREN exp SEMICOLON exp_seq RPAREN .  (reduce by rule 13)



	.	reduce by rule 13


state 109:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 
	record_param : ID EQ exp .  (reduce by rule 35)
	record_param : ID EQ exp . COMMA record_param 

	COMMA	shift 119
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 35


state 110:

	arrayRecordBuilder : ID LBRACK exp RBRACK OF . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 120
	opexp	goto 4
	lvalue	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 111:

	exp_seq : exp_seq SEMICOLON exp .  (reduce by rule 38)
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 38


state 112:

	ty : ARRAY OF . ID 

	ID	shift 121


	.	error


state 113:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 122


	.	error


state 114:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 123
	opexp	goto 4
	lvalue	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 115:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 

	COLON	shift 125
	EQ	shift 124


	.	error


state 116:

	tyfields : ID COLON . ID 
	tyfields : ID COLON . ID COMMA tyfields 

	ID	shift 126


	.	error


state 117:

	exp : FOR ID ASSIGN exp TO exp . DO exp 
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20
	DO	shift 127


	.	error


state 118:

	exp : IF exp THEN exp ELSE exp .  (reduce by rule 3)
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 3


state 119:

	record_param : ID EQ exp COMMA . record_param 

	ID	shift 79

	record_param	goto 128

	.	error


state 120:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 
	arrayRecordBuilder : ID LBRACK exp RBRACK OF exp .  (reduce by rule 32)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 32


state 121:

	ty : ARRAY OF ID .  (reduce by rule 50)



	.	reduce by rule 50


state 122:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 49)



	.	reduce by rule 49


state 123:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 
	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 58)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 58


state 124:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 129
	opexp	goto 4
	lvalue	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 125:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 130


	.	error


state 126:

	tyfields : ID COLON ID .  (reduce by rule 55)
	tyfields : ID COLON ID . COMMA tyfields 

	COMMA	shift 131


	.	reduce by rule 55


state 127:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 132
	opexp	goto 4
	lvalue	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 128:

	record_param : ID EQ exp COMMA record_param .  (reduce by rule 36)



	.	reduce by rule 36


state 129:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 60)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 60


state 130:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 133


	.	error


state 131:

	tyfields : ID COLON ID COMMA . tyfields 

	ID	shift 105

	tyfields	goto 134

	.	reduce by rule 54


state 132:

	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 7)
	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 7


state 133:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 135
	opexp	goto 4
	lvalue	goto 3
	funExp	goto 2
	arrayRecordBuilder	goto 1

	.	error


state 134:

	tyfields : ID COLON ID COMMA tyfields .  (reduce by rule 56)



	.	reduce by rule 56


state 135:

	opexp : exp . PLUS exp 
	opexp : exp . MINUS exp 
	opexp : exp . TIMES exp 
	opexp : exp . DIVIDE exp 
	opexp : exp . EQ exp 
	opexp : exp . NEQ exp 
	opexp : exp . LT exp 
	opexp : exp . LE exp 
	opexp : exp . GT exp 
	opexp : exp . GE exp 
	opexp : exp . AND exp 
	opexp : exp . OR exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 59)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 59


state 136:


	EOF	accept


	.	error

500 of 991 action table entries left after compaction
199 goto table entries
